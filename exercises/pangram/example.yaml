exercise: Pangram
version: 2
plan: 12
imports: '&is-pangram'
tests: |-
  for $c-data<cases>».<cases>».Array.flat {
    given is-pangram .<input> -> $result {
      subtest .<description>, {
        plan 2;
        isa-ok $result, Bool;
        is-deeply $result, .<expected>, 'Result matches expected';
      }
    }
  }

unit: module
example: |-
  sub is-pangram (Str:D $string --> Bool:D) is export {
    $string.lc.comb ⊇ ‘a’..‘z’
  }
stub: |-
  sub is-pangram ($string) is export {
  }
