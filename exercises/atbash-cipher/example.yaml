exercise: AtbashCipher
version: 1
plan: 4
imports: '&encode &decode'
tests: |
  for @($c-data<cases>) {
    my $test = .<description> ~~ 'encode' ?? 'encode' !! 'decode';
    subtest $test => {
      my @cases = |.<cases>;
      plan +@cases;
      is &::($test)(.<phrase>), |.<expected description> for @cases;
    }
  }

unit: module
example: |
  sub encode($input) is export {
      decode($input.lc.trans( ['a'..'z', 0..9] => '', :complement ) )
          .comb(5)
          .join: ' ';
  }
  
  sub decode (Str $input) is export {
      return $input
              .lc
              .subst( /\W/, '', :g )
              .trans( [ 'a'..'z' ] =>  ['a'..'z'].reverse );
  }
